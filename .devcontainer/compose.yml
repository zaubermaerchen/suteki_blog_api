services:
  db:
    image: groonga/mroonga:mysql-8.4.6-15.17
    platform: linux/x86_64
    ports:
      - 3306:3306
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
      MYSQL_USER: bpuser
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: bpdb
    volumes:
      - type: bind
        source: ./sql
        target: /docker-entrypoint-initdb.d
  # Update this to the name of the service you want to work with in your docker-compose.yml file
  app:
    # Uncomment if you want to override the service's Dockerfile to one in the .devcontainer
    # folder. Note that the path of the Dockerfile and context is relative to the *primary*
    # docker-compose.yml file (the first in the devcontainer.json "dockerComposeFile"
    # array). The sample below assumes your primary file is in the root of your project.
    #
    image: mcr.microsoft.com/devcontainers/base:bullseye
    tty: true
    environment:
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
      UV_PROJECT_ENVIRONMENT: /home/vscode/.venv
      UV_CACHE_DIR: /home/vscode/.cache/uv
      UV_LINK_MODE: copy
      UV_COMPILE_BYTECODE: 1
      ENV: development
      TZ: Asia/Tokyo
    depends_on:
      - db
    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      - ..:/workspaces/app:cached

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Overrides default command so things don't shut down after the process ends.
    # command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload

